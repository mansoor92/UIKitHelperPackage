name: New Release Flow

on:
  repository_dispatch:
    types:
      - new-release-event  # Same event type as defined in the sender repository

jobs:

  updateBinaryTarget:
    runs-on: macos-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
    - name: "Check Tag"
      run: echo ${{ github.event.client_payload.tags }}
    - uses: actions/checkout@v3
    - name: Update Package.swift
      run: |
        ./scripts/updateChecksum.sh ${{ github.event.client_payload.tags }}
    - name: Commit Changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        tagging_message: 'v${{ github.event.client_payload.tags }}'
    - name: Create Release
      id: create_release 
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ github.event.client_payload.tags }}
        release_name: Release v${{ github.event.client_payload.tags }}

    # - name: Create Pull Request
    # uses: peter-evans/create-pull-request@v5
      # with:
      #   token: ${{ secrets.GITHUB_TOKEN }}
      #   author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>


# name: Triggered by Dispatch

# on:
#   repository_dispatch:
#     types:
#       - trigger-event  # Same event type as defined in the sender repository

# jobs:
#   triggered:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Check Payload
#       run: echo "Received payload: ${{ toJson(github.event.client_payload) }}"



# on:
#   workflow_dispatch:
#     inputs:
#       newVersion:
#         description: 'New Version'
#         default: '1.0.2'
#         required: true